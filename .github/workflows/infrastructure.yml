name: Update Infrastructure

on:
  push:
    paths:
      - 'aws/**'
      - '.github/workflows/infrastructure.yml'
    branches: [ main ]
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'update'
        type: choice
        options:
        - update
        - validate
        - delete

env:
  AWS_REGION: us-east-1
  STACK_NAME: matt-yee-website

jobs:
  infrastructure:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Validate CloudFormation template
      run: |
        echo "üîç Validating CloudFormation template..."
        aws cloudformation validate-template \
          --template-body file://aws/cloudformation.yaml \
          --region ${{ env.AWS_REGION }}
        echo "‚úÖ Template validation successful"

    - name: Check if stack exists
      id: stack-check
      run: |
        if aws cloudformation describe-stacks \
           --stack-name ${{ env.STACK_NAME }} \
           --region ${{ env.AWS_REGION }} >/dev/null 2>&1; then
          echo "exists=true" >> $GITHUB_OUTPUT
          echo "Stack exists"
        else
          echo "exists=false" >> $GITHUB_OUTPUT
          echo "Stack does not exist"
        fi

    - name: Update existing stack
      if: steps.stack-check.outputs.exists == 'true' && (github.event.inputs.action != 'delete')
      run: |
        echo "üîÑ Updating existing CloudFormation stack..."
        aws cloudformation update-stack \
          --stack-name ${{ env.STACK_NAME }} \
          --template-body file://aws/cloudformation.yaml \
          --parameters ParameterKey=DomainName,ParameterValue=themattyee.com \
                      ParameterKey=CreateCertificate,ParameterValue=true \
                      ParameterKey=HostedZoneId,ParameterValue=Z00037831YZW35S8B8BPP \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }} || echo "No updates needed"

    - name: Create new stack
      if: steps.stack-check.outputs.exists == 'false' && (github.event.inputs.action != 'delete')
      run: |
        echo "üöÄ Creating new CloudFormation stack..."
        aws cloudformation create-stack \
          --stack-name ${{ env.STACK_NAME }} \
          --template-body file://aws/cloudformation.yaml \
          --parameters ParameterKey=DomainName,ParameterValue=themattyee.com \
                      ParameterKey=CreateCertificate,ParameterValue=true \
                      ParameterKey=HostedZoneId,ParameterValue=Z00037831YZW35S8B8BPP \
          --capabilities CAPABILITY_IAM \
          --region ${{ env.AWS_REGION }}

    - name: Wait for stack operation to complete
      if: github.event.inputs.action != 'delete' && github.event.inputs.action != 'validate'
      run: |
        if [ "${{ steps.stack-check.outputs.exists }}" == "true" ]; then
          echo "‚è≥ Waiting for stack update to complete..."
          aws cloudformation wait stack-update-complete \
            --stack-name ${{ env.STACK_NAME }} \
            --region ${{ env.AWS_REGION }} || true
        else
          echo "‚è≥ Waiting for stack creation to complete..."
          aws cloudformation wait stack-create-complete \
            --stack-name ${{ env.STACK_NAME }} \
            --region ${{ env.AWS_REGION }}
        fi

    - name: Delete stack (manual trigger only)
      if: github.event.inputs.action == 'delete'
      run: |
        echo "üóëÔ∏è Deleting CloudFormation stack..."
        echo "‚ö†Ô∏è This will delete all infrastructure resources!"
        aws cloudformation delete-stack \
          --stack-name ${{ env.STACK_NAME }} \
          --region ${{ env.AWS_REGION }}
        
        echo "‚è≥ Waiting for stack deletion to complete..."
        aws cloudformation wait stack-delete-complete \
          --stack-name ${{ env.STACK_NAME }} \
          --region ${{ env.AWS_REGION }}

    - name: Get stack outputs
      if: github.event.inputs.action != 'delete'
      run: |
        echo "üìã Stack Information:"
        aws cloudformation describe-stacks \
          --stack-name ${{ env.STACK_NAME }} \
          --query 'Stacks[0].{Status:StackStatus,Outputs:Outputs}' \
          --region ${{ env.AWS_REGION }}

    - name: Infrastructure Summary
      if: success()
      run: |
        if [ "${{ github.event.inputs.action }}" == "delete" ]; then
          echo "üóëÔ∏è Infrastructure successfully deleted"
        else
          echo "üéâ Infrastructure operation completed successfully!"
          echo ""
          echo "Stack Status: $(aws cloudformation describe-stacks --stack-name ${{ env.STACK_NAME }} --query 'Stacks[0].StackStatus' --output text --region ${{ env.AWS_REGION }})"
        fi