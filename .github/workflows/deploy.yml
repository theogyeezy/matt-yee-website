name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Deploy to S3
      run: |
        # Upload assets with long cache and correct content types
        aws s3 sync dist/assets/ s3://themattyee.com-website/assets/ --delete --cache-control max-age=31536000,public
        
        # Set correct content types for assets
        aws s3 cp s3://themattyee.com-website/assets/ s3://themattyee.com-website/assets/ --recursive --metadata-directive REPLACE --cache-control max-age=31536000,public --content-type-by-extension
        
        # Upload HTML with correct content type and no cache
        aws s3 cp dist/index.html s3://themattyee.com-website/index.html --content-type "text/html" --cache-control max-age=0,no-cache,no-store,must-revalidate
        
        # Upload other files with correct content types
        aws s3 cp dist/robots.txt s3://themattyee.com-website/robots.txt --content-type "text/plain" --cache-control max-age=3600,public
        aws s3 cp dist/sitemap.xml s3://themattyee.com-website/sitemap.xml --content-type "application/xml" --cache-control max-age=3600,public
        
    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id E2RLBM05PWXQTH --paths "/*"
        
    - name: Deployment Success
      run: |
        echo "âœ… Successfully deployed to https://themattyee.com"
        echo "ðŸš€ CloudFront invalidation initiated"